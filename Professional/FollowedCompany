   
<table border=1>
    <thead>
        <tr>
            <th> Company Name</th>
            <th>Industry</th>
            <th>Open Jobs Count</th>
            <th> | Following status | </th>
        </tr>
    </thead>
    
    <tbody data-followed-employer-tr-body>
       
    </tbody>
</table>

<script>

class FollowedCompany {
  constructor() { //professional dependency injection, empty for now
    this.id = 48 //professional.id
    this.getOpenJobsCount = (employer_id) => {
		  const count =  fetchData("113442", `?filter__field_751992__link_row_has=${parseInt(employer_id)}&filter__field_925534__equal=Open`).then(value=>{
		      return value.data.count
		  })
		  return count
	      }
  }
  _run() {
    this._loadFollowedCompany(this.getOpenJobsCount)
  }

  _loadFollowedCompany(openJobCount) {
    fetchData("116205", `?filter__field_1172163__link_row_has=${this.id}`).then(value=>{//48 is logged in user id
        const followedEmployers = value.data.results
        const table_followed_emp = document.querySelector("[data-followed-employer-tr-body]")
        table_followed_emp.innerHTML = ""
      
        followedEmployers.forEach(async (followedEmployer)=>{
            const tr = document.createElement("tr") 

            const tdCompanyName = document.createElement("td")
            tdCompanyName.textContent = followedEmployer?.field_738186 ?? "Not set" //company name
            tr.appendChild(tdCompanyName)

            const tdIndustry = document.createElement("td")
            tdIndustry.textContent = followedEmployer.field_738189?.value ?? "Not set" //industry
            tr.appendChild(tdIndustry)

            const tdOpenJobsCount = document.createElement("td")
            tdOpenJobsCount.textContent = await openJobCount(followedEmployer.id)
            tr.appendChild(tdOpenJobsCount) //open jobs count

            const tdFollowingStatus = document.createElement("td")
            tdFollowingStatus.textContent = 'Following(this column has click event that unfollows the company)'
            tdFollowingStatus.addEventListener("click", ()=>{ // added click event to unfollow the company
                console.log("clicked!")
                const dataArr = followedEmployer?.field_1172163 ?? []

                const updateDataArr = dataArr.filter(followedEmployer=>followedEmployer.id !== this.id).map(followedEmployer=>followedEmployer.id) //48 is logged in user id
                const data = {
                    "field_1172163": updateDataArr
                }
              updateRowByRowId(data, "116205", neatlistB.key, followedEmployer.id).then(res => this._run()) // this updates the link field column with new data array >> tr.remove() if youll use table else rerun method "this._run()"
            })
            tr.appendChild(tdFollowingStatus)

            table_followed_emp.appendChild(tr) // add new row to table
        })
    })
  }
}
const followedCompany = new FollowedCompany()
followedCompany._run()
</script>

